generate_nginx_conf() {
    local domain=$1
    local container=$2
    local certificate=$3
    local conf_file="$CONF_DIR/$domain.conf"
    local use_authentik=false

    mkdir -p "$(dirname "$conf_file")"

    # Check if container uses 's:', 'a:', or 's:a:'/'a:s:'
    if [[ "$container" == s:a:* || "$container" == a:s:* ]]; then
        container="${container/s:a:/https://}"
        use_authentik=true
    elif [[ "$container" == s:* ]]; then
        container="${container/s:/https://}"
    elif [[ "$container" == a:* ]]; then
        container="${container/a:/http://}"
        use_authentik=true
    else
        container="http://$container"
    fi

    cat > "$conf_file" <<EOF
############
# $domain
# autogenerated using >> cmnds revpro
# DON'T EDIT DIRECTLY, revpro OVERWRITES THIS FILE!!!
# github.com/maskalix/cmnds
############

server {
    listen 80;
    server_name $domain;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://\$host\$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name $domain;

    access_log $LOG_DIR/${domain}_access.log;
    error_log $LOG_DIR/${domain}_error.log;

    # SSL settings
    ssl_certificate /etc/letsencrypt/live/$certificate/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$certificate/privkey.pem;

    # Include optional configuration files
    include /etc/nginx/ssl-ciphers.conf;
    include /etc/nginx/letsencrypt-acme-challenge.conf;

EOF

    # If Authentik proxy should be used, include its configuration
    if [ "$use_authentik" = true ]; then
        cat >> "$conf_file" <<EOF
    # Include Authentik Proxy configuration
    include /etc/nginx/authentik-proxy.conf;
EOF
    fi

    cat >> "$conf_file" <<EOF
    location / {
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection \$http_connection;
        proxy_http_version 1.1;
        proxy_pass $container;
    }
}
EOF

    echo "Configuration for $domain written to $conf_file"

    # Create log files for the domain
    create_log_files "$domain"
}
